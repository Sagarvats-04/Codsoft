import tkinter as tk
from tkinter import messagebox, filedialog
import os


class TodoApp:
    def __init__(self, root):
        self.root = root
        self.root.title("To-Do List App")
        self.root.geometry("500x600")
        self.root.configure(bg="#f0f0f0")
        
        self.tasks = []

        # Title
        title_label = tk.Label(root, text="üìù To-Do List", font=("Helvetica", 20, "bold"), bg="#f0f0f0")
        title_label.pack(pady=20)

        # Task Entry
        self.task_input = tk.Entry(root, font=("Helvetica", 14), width=30)
        self.task_input.pack(pady=10)

        # Add Task Button
        add_btn = tk.Button(root, text="Add Task", font=("Helvetica", 12), width=15, command=self.add_task)
        add_btn.pack(pady=5)

        # Task Listbox
        self.task_listbox = tk.Listbox(root, width=40, height=12, font=("Helvetica", 12), selectbackground="#a0c4ff")
        self.task_listbox.pack(pady=20)

        # Control Buttons
        button_frame = tk.Frame(root, bg="#f0f0f0")
        button_frame.pack()

        del_btn = tk.Button(button_frame, text="Delete Task", font=("Helvetica", 12), width=15, command=self.delete_task)
        del_btn.grid(row=0, column=0, padx=10, pady=5)

        complete_btn = tk.Button(button_frame, text="Mark Completed", font=("Helvetica", 12), width=15, command=self.mark_completed)
        complete_btn.grid(row=0, column=1, padx=10, pady=5)

        clear_btn = tk.Button(button_frame, text="Clear All", font=("Helvetica", 12), width=15, command=self.clear_tasks)
        clear_btn.grid(row=1, column=0, padx=10, pady=5)

        save_btn = tk.Button(button_frame, text="Save Tasks", font=("Helvetica", 12), width=15, command=self.save_tasks)
        save_btn.grid(row=1, column=1, padx=10, pady=5)

        # Load saved tasks if any
        self.load_tasks()

    def add_task(self):
        task = self.task_input.get()
        if task.strip():
            self.tasks.append(task)
            self.update_listbox()
            self.task_input.delete(0, tk.END)
        else:
            messagebox.showwarning("Input Error", "Please enter a task.")

    def delete_task(self):
        try:
            selected = self.task_listbox.curselection()[0]
            del self.tasks[selected]
            self.update_listbox()
        except IndexError:
            messagebox.showwarning("Selection Error", "Please select a task to delete.")

    def mark_completed(self):
        try:
            selected = self.task_listbox.curselection()[0]
            task = self.tasks[selected]
            if not task.startswith("[Done] "):
                self.tasks[selected] = "[Done] " + task
                self.update_listbox()
        except IndexError:
            messagebox.showwarning("Selection Error", "Please select a task to mark as completed.")

    def clear_tasks(self):
        if messagebox.askyesno("Confirm", "Are you sure you want to clear all tasks?"):
            self.tasks.clear()
            self.update_listbox()

    def update_listbox(self):
        self.task_listbox.delete(0, tk.END)
        for task in self.tasks:
            self.task_listbox.insert(tk.END, task)

    def save_tasks(self):
        with open("todo_tasks.txt", "w") as file:
            for task in self.tasks:
                file.write(task + "\n")
        messagebox.showinfo("Saved", "Tasks saved successfully!")

    def load_tasks(self):
        if os.path.exists("todo_tasks.txt"):
            with open("todo_tasks.txt", "r") as file:
                self.tasks = [line.strip() for line in file]
                self.update_listbox()


if __name__ == "__main__":
    root = tk.Tk()
    app = TodoApp(root)
    root.mainloop()

