
import tkinter as tk
from tkinter import messagebox, simpledialog

class TodoApp:
    def __init__(self, root):
        self.root = root
        self.root.title("To-Do List Application")
        self.root.geometry("800x600")  # Set window size
        self.tasks = []

        # Entry to add new task
        self.task_entry = tk.Entry(root, width=60)
        self.task_entry.pack(pady=10)

        # Add Task Button
        add_button = tk.Button(root, text="Add Task", command=self.add_task)
        add_button.pack(pady=5)

        # Frame to hold task list
        self.task_frame = tk.Frame(root)
        self.task_frame.pack(fill='both', expand=True)

        self.render_tasks()

    def add_task(self):
        task_text = self.task_entry.get().strip()
        if task_text:
            self.tasks.append({"text": task_text, "done": False})
            self.task_entry.delete(0, tk.END)
            self.render_tasks()
        else:
            messagebox.showwarning("Input Error", "Task cannot be empty")

    def render_tasks(self):
        for widget in self.task_frame.winfo_children():
            widget.destroy()

        for index, task in enumerate(self.tasks):
            frame = tk.Frame(self.task_frame)
            frame.pack(fill='x', pady=2)

            var = tk.BooleanVar(value=task["done"])
            checkbox = tk.Checkbutton(frame, variable=var, command=lambda i=index, v=var: self.toggle_task(i, v))
            checkbox.pack(side='left')

            label_text = task["text"] + (" (Completed)" if task["done"] else "")
            label = tk.Label(frame, text=label_text, fg='black', font=('Arial', 12), width=60, anchor='w')
            label.pack(side='left', padx=5)

            edit_button = tk.Button(frame, text="Edit", command=lambda i=index: self.edit_task(i))
            edit_button.pack(side='left', padx=5)

            delete_button = tk.Button(frame, text="Delete", command=lambda i=index: self.confirm_delete_task(i))
            delete_button.pack(side='left')

    def toggle_task(self, index, var):
        self.tasks[index]["done"] = var.get()
        self.render_tasks()

    def edit_task(self, index):
        new_text = simpledialog.askstring("Edit Task", "Update task:", initialvalue=self.tasks[index]["text"])
        if new_text:
            self.tasks[index]["text"] = new_text.strip()
            self.render_tasks()

    def confirm_delete_task(self, index):
        response = messagebox.askyesno("Delete Confirmation", "Are you sure you want to delete this task?")
        if response:
            self.delete_task(index)

    def delete_task(self, index):
        del self.tasks[index]
        self.render_tasks()

if __name__ == '__main__':
    root = tk.Tk()
    app = TodoApp(root)
    root.mainloop()

